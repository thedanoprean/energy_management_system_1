version: '3.1'

services:
  frontend-container:
      container_name: frontend-container
      image: frontend
      ports:
        - '7000:80'

  container-device-microservice:
    image: device-backend
    environment:
      - DB_HOST=container-device-database
      - DB_PORT=5432
      - DB_NAME=devices-management
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
      - DB_TYPE=update
    ports:
      - 3003:8080
    depends_on:
      container-device-database:
        condition: service_healthy

  container-user-microservice:
    image: user-backend
    environment:
      - DB_HOST=container-user-database
      - DB_PORT=5432
      - DB_NAME=users-management
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
      - SERVER_PORT=8081
      - DB_TYPE=update
    ports:
      - 3000:8081
    depends_on:
      container-device-microservice:
        condition: service_started
      container-user-database:
        condition: service_healthy

  container-user-database:
    image: postgres:alpine3.18
    ports:
      - 5404:5432
    volumes:
      - ~/apps/postgres_users_volume:/var/lib/postgresql/data
    user: postgres
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users-management
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 5s
      retries: 5

  container-device-database:
    image: postgres:alpine3.18
    ports:
      - 5303:5432
    volumes:
      - ~/apps/postgres_devices_volume:/var/lib/postgresql/data
    user: postgres
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=devices-management
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 5s
      retries: 5
